/ setup stack at memory address 1000 and call function
0    addi $sp $zero 1000
4    addi $a0 $zero 100
8    jal square-list
12    exit

/ procedure square-list($a0 : max number, $a1 : output base)
/ $s0 : $a0
/ $s1 : loop counter
/ $t0 : memory address
square-list:
16    subi $sp $sp 12
20    sw $s0 0($sp)
24    sw $s1 4($sp)
28    sw $ra 8($sp)
32    add $s0 $a0 $zero
36    addi $s1 $zero 1
40    sw $zero 0($a1) / code does not work for squaring 0, so using special case
outer-loop:
44    add $a0 $s1 $zero
48    jal square
52    sll $t0 $s1 2
56    add $t0 $t0 $a1
60    sw $v0 0($t0)
64    addi $s1 $s1 1
68    bne $s1 $s0 outer-loop
72    lw $s0 0($sp)
76    lw $s1 4($sp)
80    lw $ra 8($sp)
84    addi $sp $sp 12
88    jr $ra

/ procedure square($a0 : number)
/ $t0 : loop counter
/ $v0 : current square value
square:
92    add $t0 $zero $zero
96    add $v0 $zero $zero
inner-loop:
100    add $v0 $v0 $a0
104    addi $t0 $t0 1
108    bne $t0 $a0 inner-loop
112    jr $ra